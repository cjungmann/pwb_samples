#!/usr/bin/env bash

###################################
###  KEYBINDER EXEC FUNCTIONS   ###
###################################

exec_help()
{
    pwb_keybinder help KEYBINDINGS
}

#########################
###   PWB CALLBACKS   ###
#########################

print_line()
{
    local -n pl_dsource="$2"
    printf "%-*.*s" "$3" "$3" "${pl_dsource[$1]}"
}

execute_line()
{
    local keyp="$1"
    local -n el_dsource="$3"
    local el_item="${el_dsource[$2]}"
    local el_psource="$4"

    local el_func
    if pwb_keybinder func KEYBINDINGS -v el_func -k "$keyp"; then
        printf $'e\[H\e[2J'
        "$el_func" "$el_item"
        printf $'\e[H\e[2J'
        pwb print_all "$el_psource"
    fi
}

#########################
###   MISCELLANEOUS   ###
#########################

exit_trap() { printf $'\e[H\e[2J'; pwb restore; }

############################
###   EXECUTION BEGINS   ###
############################

enable pwb

declare -a PSOURCES=(
    pwb_exit_on_error
    pwb_keybinder
)
source <( pwb_sources "${PSOURCES[@]}" )

# Global array to be used in several places
declare -a KEYBINDINGS=(
    '?'   exec_help   "Show help"
)

declare KEYMAP
pwb_keybinder prep -v KEYMAP KEYBINDINGS

declare -a PDATA=( * )

declare -a PARGS=(
    PDATA
    "${#PDATA[*]}"
    print_line
    -e execute_line
)
declare PHANDLE
pwb declare PHANDLE "${PARGS[@]}"
pwb_exit_on_error

trap exit_trap EXIT SIGINT SIGABRT

pwb init
pwb start PHANDLE -a KEYMAP
pwb_exit_on_error
