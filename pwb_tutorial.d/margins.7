.TH margins_1 7
.SH INTRODUCTION
.PP
Margins are an important feature of
.BR  pwb .
Superficially, they can be used to create a visual buffer around
the content for easier viewing.  A more useful purpose is to divide
the screen into different areas to be filled with context information
like usage hints, item details, or progress information.
.SH PREPARING MARGINS
.PP
Margins are defined spaces that surround the content.  Margins are
created by calling the
.B set_margins
action after declaring the
.B pwb
handle.
.PP
The
.B set_margins
action is applied to a handle, so the handle must be created
with the
.B declare
action before setting the margins:
.PP
.RS 4
.EX
pwb declare PHANDLE DIR_FILES \(dq\(Do{\(shDIR_FILES[*]}\(dq print_line
pwb set_margins PHANDLE 4 20
.EE
.RE
.PP
In this example, the top and bottom margins will be 4 lines each, and
the left and right margins will be 20 each.
The
.B set_margins
action uses a non-obvious arrangement of arguments.  Please refer to
the
.B ARGUMENTS OF SET_MARGINS ACTION
section below for a complete explanation.
.SS INITIALIZING THE SCREEN
.PP
.B pwb
will neither print on nor erase from the margin areas unless
a script registers one or more functions that target the margin
areas.
To prevent leftover text from spoiling the start of a
.B pwb
application, the script should either use
.B pwb init
or specifically blank the screen with something like:
.PP
.RS 4
.EX
printf \(Do\(aq\(rse[2J\(aq
.EE
.RE
.SS PRINTING IN MARGINS
.PP
An unused margin area is available for printing information.
The associated script writes instructions for exiting the
application in the top margin.

.SH ARGUMENTS OF SET_MARGINS ACTION
.PP
The argument order is unusual, but follows the model for the
CSS box model declaration.
The rule is the margins are defined in clockwise order, starting
with the top.  Undefined margins will use the value from the margin
on its opposite side.
Only the first argument is required,
and additional arguments are interpreted like this:
.RS
.TS
tab(|);
l lx.
one argument|T{
number used for all four margins
T}

two arguments|T{
first argument is
.BR top " and " bottom ,
.br
second argument is
.BR left " and " right .
T}

three arguments|T{
first argument is
.BR top ,
.br
second argument is
.BR left " and " right ,
.br
third argument is
.BR bottom .
T}

four arguments|T{
arguments apply in
.BR top ", " right ", " bottom ",  then " left " order."
T}
.TE
.RE
.PP
Another way to look at it is:
.PP
.EX
.B pwb set_margins \c
.I PHANDLE all_sides
.br
.B pwb set_margins \c
.I PHANDLE top_and_bottom right_and_left
.br
.B pwb set_margins \c
.I PHANDLE top right_and_left bottom
.br
.B pwb set_margins \c
.I PHANDLE top right bottom left
.EE
.RE
